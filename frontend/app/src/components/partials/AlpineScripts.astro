---
export const AlertDialogXData = `
    alert_dialog_open: false,
    alert_dialog_title: '',
    alert_dialog_content: '',
    async show_alert_dialog(title, content) {
        this.alert_dialog_title = title
        this.alert_dialog_content = content
        this.alert_dialog_open = true
        
        await this.alert_dialog_close()
        this.alert_dialog_open = false
    },
    alert_dialog_close() {
        const body = document.querySelector("body");

        return new Promise(function (resolve, reject) {
            var listener = event => {
                if (event.target.hasAttribute('alert-dialog-action')) {
                    body.removeEventListener('click', listener);
                    resolve({
                        action: event.target.getAttribute('alert-dialog-action')
                    });
                }
            };
            body.addEventListener('click', listener);
        });
    },`

export const ConfirmDialogXData = `
    confirm_dialog_open: false,
    confirm_dialog_title: '',
    confirm_dialog_content: '',
    async show_confirm_dialog(title, content, return_on_accept = true) {
        this.confirm_dialog_title = title
        this.confirm_dialog_content = content
        this.confirm_dialog_open = true        

        const result = await this.confirm_dialog_close()
        this.confirm_dialog_open = false
        return result.action == 'accept' ? return_on_accept : false
    },
    confirm_dialog_close() {
        const body = document.querySelector("body");
        console.log(document.querySelector(".confirm-dialog"))

        return new Promise(function (resolve, reject) {
            var listener = event => {
                if (event.target.hasAttribute('confirm-dialog-action')) {
                    body.removeEventListener('click', listener);
                    resolve({
                        action: event.target.getAttribute('confirm-dialog-action')
                    });
                }
            };
            body.addEventListener('click', listener);
        });
    },`
    
export const PersonaFinderXData = `
    personas_finder_open: false,
    persona_finder_role: 'all',
    async show_personas_finder(role = 'all') {
        this.persona_finder_role = role
        this.personas_finder_open = true
        document.querySelector('.personas_finder input').focus()
        
        const result = await this.personas_finder_accept()
        this.personas_finder_open = false
        return result.action == 'accept' ? result.persona_id : false
    },
    personas_finder_accept() {
        const body = document.querySelector("body");

        return new Promise(function (resolve, reject) {
            var listener = event => {
                if (event.target.hasAttribute('persona-finder-action')) {
                    body.removeEventListener('click', listener);
                    resolve({
                        action: event.target.getAttribute('persona-finder-action'),
                        persona_id: JSON.parse(event.target.getAttribute('persona-finder-data'))
                    });
                }
            };
            body.addEventListener('click', listener);
        });
    },`

export const CorporationFinderXData = `
    corporations_finder_open: false,
    async show_corporations_finder() {
        this.corporations_finder_open = true
        document.querySelector('.corporations_finder input').focus()
        
        const result = await this.corporations_finder_accept()
        this.corporations_finder_open = false
        return result.action == 'accept' ? result.corporation_id : false
    },
    corporations_finder_accept() {
        const body = document.querySelector("body");

        return new Promise(function (resolve, reject) {
            var listener = event => {
                if (event.target.hasAttribute('corporation-finder-action')) {
                    body.removeEventListener('click', listener);
                    resolve({
                        action: event.target.getAttribute('corporation-finder-action'),
                        corporation_id: JSON.parse(event.target.getAttribute('corporation-finder-data'))
                    });
                }
            };
            body.addEventListener('click', listener);
        });
    },`

export const AllianceFinderXData = `
    alliances_finder_open: false,
    async show_alliances_finder() {
        this.alliances_finder_open = true
        document.querySelector('.alliances_finder input').focus()
        
        const result = await this.alliances_finder_accept()
        this.alliances_finder_open = false
        return result.action == 'accept' ? result.alliance_id : false
    },
    alliances_finder_accept() {
        const body = document.querySelector("body");

        return new Promise(function (resolve, reject) {
            var listener = event => {
                if (event.target.hasAttribute('alliance-finder-action')) {
                    body.removeEventListener('click', listener);
                    resolve({
                        action: event.target.getAttribute('alliance-finder-action'),
                        alliance_id: JSON.parse(event.target.getAttribute('alliance-finder-data'))
                    });
                }
            };
            body.addEventListener('click', listener);
        });
    },`

export const UtilitiesXData = `
    get_player_icon(id, size = 64) {
        return 'https://images.evetech.net/characters/'+id+'/portrait?size='+size;
    },
    get_corporation_logo(id, size = 32) {
        return 'https://images.evetech.net/corporations/'+id+'/logo?size='+size;
    },
    get_alliance_logo(id, size = 32) {
        return 'https://images.evetech.net/alliances/'+id+'/logo?size='+size;
    },`
---